---
- name:         find buggy hosts
  hosts:        all
  gather_facts: false
  tasks:
  
        - command:       "sleep 6"
          async:         2
          poll:          2
          retries:       1
          ignore_errors: True
          register:      df_test
         
        - set_fact:
            df_test: pass
          when:      df_test.msg is not defined
          
        - set_fact:
            df_test: fail
          when:      df_test.msg is defined
          
        - name: run on tower node
          block:
          - add_host:
              name:      "{{ item }}"
              group:     buggy
            with_items:  "{{ groups['all'] }}"
            when:        hostvars[item]['df_test'] == 'fail'
          delegate_to: localhost
          run_once:    true
          
        - add_host:
            name:      "{{ item }}"
            group:     available
          with_items:  "{{ groups['all'] }}"
          when:        hostvars[item]['df_test'] == 'pass'
          delegate_to: localhost
          run_once:    true
          
        - template:
            src:       email.j2
            dest:      /tmp/buggy_hosts.txt
          run_once:    true
          delegate_to: localhost
          
        - mail:          
            from:        "{{ email_username }}"
            to:          "{{ email_to }}"
            cc:          "{{ email_cc }}"
            subject:     "{{ email_subject }}"
            attach:      /tmp/buggy_hosts.txt
            body: |
              This email was generated by Ansible.
              The attached list will display the buggy hosts.
              An Ansible admin will be able to use this list of hosts as an inventory source.
          delegate_to: localhost
          run_once:    true
        
        - file:
            name: /tmp/buggy_hosts.txt
            state: absent
           

          
       

- hosts:        buggy,available
  gather_facts: false
  strategy:     free
  tasks:
    #- shell: sleep 1000
    - debug: var=inventory_hostname
    - debug: var=group_names
    - debug: var=groups.available
    - debug: var=groups.buggy
